def fetch_pt7_data():
    Pt7_bars = [
        [0, 2, 0.23],
        [0, 10, 0.75],
        [2, 11, 0.28],
        [2, 20, 0.59],
        [20, 25, 0.46],
        [11, 19, 0.14],
        [1, 18, 0.56],
        [1, 3, 0.19],
        [1, 5, 0.52],
        [1, 4, 0.41],
        [4, 13, 0.29],
        [4, 7, 0.39],
        [6, 7, 0.19],
        [7, 22, 0.50],
        [6, 9, 0.18],
        [9, 16, 0.16],
        [13, 14, 0.27],
        [14, 17, 0.56],
        [5, 21, 0.36],
        [15, 21, 0.37],
        [3, 24, 0.78],
        [12, 22, 0.41],
        [10, 12, 0.62],
        [10, 23, 0.39],
        [8, 23, 0.45],
    ]

    Pt7_rel = [
        0,
        0.073,
        0.226,
        0.249,
        0.269,
        0.384,
        0.390,
        0.400,
        0.404,
        0.432,
        0.443,
        0.468,
        0.526,
        0.540,
        0.541,
        0.547,
        0.552,
        0.571,
        0.577,
        0.582,
        0.631,
        0.678,
        0.686,
        0.782,
        0.809,
        0.894,
    ]

    Pt7_rev = []
    for i in range(0, len(Pt7_bars)):
        Pt7_rev.append(
            [
                Pt7_bars[i][1],
                Pt7_bars[i][0],
                round(
                    (Pt7_bars[i][2] + Pt7_rel[Pt7_bars[i][0]])
                    - Pt7_rel[Pt7_bars[i][1]],
                    3,
                ),
            ]
        )
        # all barriers
    Pt7_all = Pt7_bars + Pt7_rev

    return Pt7_all, Pt7_rel


def fetch_huanchen():
    rel = [
        0.00,
        0.073,
        0.226,
        0.249,
        0.269,
        0.287,
        0.297,
        0.384,
        0.390,
        0.391,
        0.400,
        0.401,
        0.404,
        0.432,
        0.443,
        0.468,
        0.526,
        0.540,
        0.541,
        0.547,
        0.552,
        0.571,
        0.577,
        0.582,
        0.631,
        0.678,
        0.686,
        0.782,
        0.809,
        0.894,
    ]

    bars = [
        [5, 2, 0.2105],
        [2, 5, 0.4066],
        [3, 1, 0.0004],
        [1, 3, 0.2266],
        [6, 3, 0.005],
        [3, 6, 0.0658],
        [15, 1, 0.304],
        [1, 15, 0.7465],
        [17, 6, 0.6099],
        [6, 17, 0.8486],
        [17, 13, 0.8118],
        [13, 17, 0.9337],
        [15, 6, 0.33],
        [6, 15, 0.4855],
        [8, 2, 0.2077],
        [2, 8, 0.5186],
        [14, 11, 0.1628],
        [11, 14, 0.1944],
        [18, 5, 0.0152],
        [5, 18, 0.2868],
        [19, 8, 0.2828],
        [8, 19, 0.4401],
        [19, 13, 0.7236],
        [13, 19, 0.8608],
        [20, 2, 0.606],
        [2, 20, 1.0801],
        [19, 18, 0.2732],
        [18, 19, 0.2737],
        [22, 13, 0.6859],
        [13, 22, 0.8527],
        [22, 15, 0.7569],
        [15, 22, 0.8849],
        [11, 7, 0.2604],
        [7, 11, 0.363],
        [24, 13, 1.065],
        [13, 24, 1.2433],
        [9, 2, 0.4541],
        [2, 9, 0.7714],
        [23, 8, 0.0807],
        [8, 23, 0.2742],
        [11, 9, 0.1824],
        [9, 11, 0.1923],
        [14, 21, 0.1557],
        [21, 14, 0.0348],
        [9, 8, 0.8045],
        [8, 9, 0.8109],
        [9, 10, 0.0702],
        [14, 12, 0.1517],
        [12, 14, 0.1823],
        [10, 8, 0.8047],
        [8, 10, 0.8119],
        [21, 8, 0.4175],
        [8, 21, 0.5863],
        [14, 9, 0.1528],
        [9, 14, 0.1943],
        [20, 26, 0.3718],
        [26, 20, 0.2404],
        [9, 12, 0.014],
        [12, 9, 0.0031],
        [15, 28, 0.3947],
        [28, 15, 0.0549],
        [17, 27, 0.4136],
        [27, 17, 0.2531],
        [22, 19, 0.5255],
        [19, 22, 0.5551],
        [30, 13, 0.24],
        [13, 30, 0.7303],
        [20, 4, 0.6488],
        [4, 20, 0.9461],
        [4, 29, 0.7771],
        [29, 4, 0.2172],
        [4, 2, 0.0175],
        [2, 4, 0.1942],
        [25, 30, 0.4559],
        [30, 25, 0.1931],
        [26, 8, 0.0696],
        [8, 26, 0.3643],
        [27, 11, 0.2093],
        [11, 27, 0.4957],
        [30, 24, 1.0346],
        [24, 30, 1.3466],
        [16, 3, 0.0419],
        [3, 16, 0.2836],
        [25, 6, 0.1843],
        [6, 25, 0.5286],
        [24, 16, 0.0232],
        [16, 24, 0.1374],
        [17, 15, 0.5386],
        [15, 17, 0.6217],
        [28, 13, 0.0734],
        [13, 28, 0.4521],
        [7, 5, 0.0223],
        [10, 9, 0.0694],
        [5.0, 7.0, 0.059],
        [23.0, 2.0, 0.0512],
        [2.0, 23.0, 0.5556],
    ]

    for ind, i in enumerate(bars):
        bars[ind] = [int(bars[ind][0] - 1), int(bars[ind][1] - 1), bars[ind][2]]

    return bars, rel


def fetch_huanchen_plot():
    rel = [
        0.00,
        0.073,
        0.226,
        0.249,
        0.269,
        0.287,
        0.297,
        0.384,
        0.390,
        0.391,
        0.400,
        0.401,
        0.404,
        0.432,
        0.443,
        0.468,
        0.526,
        0.540,
        0.541,
        0.547,
        0.552,
        0.571,
        0.577,
        0.582,
        0.631,
        0.678,
        0.686,
        0.782,
        0.809,
        0.894,
    ]

    bars = [
        [5, 2, 0.2105],
        [2, 5, 0.4066],
        [3, 1, 0.0004],
        [1, 3, 0.2266],
        [6, 3, 0.005],
        [3, 6, 0.0658],
        [15, 1, 0.304],
        [1, 15, 0.7465],
        # [17, 6, 0.6099],
        # [6, 17, 0.8486],
        # [17, 13, 0.8118],
        # [13, 17, 0.9337],
        # [15, 6, 0.33],
        # [6, 15, 0.4855],
        [8, 2, 0.2077],
        [2, 8, 0.5186],
        # [14, 11, 0.1628],
        # [11, 14, 0.1944],
        [18, 5, 0.0152],
        [5, 18, 0.2868],
        # [19, 8, 0.2828],
        # [8, 19, 0.4401],
        # [19, 13, 0.7236],
        # [13, 19, 0.8608],
        # [20, 2, 0.606],
        # [2, 20, 1.0801],
        [19, 18, 0.2732],
        [18, 19, 0.2737],
        # [22, 13, 0.6859],
        # [13, 22, 0.8527],
        # [22, 15, 0.7569],
        # [15, 22, 0.8849],
        [11, 7, 0.2604],
        [7, 11, 0.363],
        # [24, 13, 1.065],
        # [13, 24, 1.2433],
        # [9, 2, 0.4541],
        # [2, 9, 0.7714],
        # [23, 8, 0.0807],
        # [8, 23, 0.2742],
        [11, 9, 0.1824],
        [9, 11, 0.1923],
        [14, 21, 0.1557],
        [21, 14, 0.0348],
        # [9, 8, 0.8045],
        # [8, 9, 0.8109],
        [9, 10, 0.0702],
        [14, 12, 0.1517],
        [12, 14, 0.1823],
        # [10, 8, 0.8047],
        # [8, 10, 0.8119],
        # [21, 8, 0.4175],
        # [8, 21, 0.5863],
        # [14, 9, 0.1528],
        # [9, 14, 0.1943],
        [20, 26, 0.3718],
        [26, 20, 0.2404],
        [9, 12, 0.014],
        [12, 9, 0.0031],
        [15, 28, 0.3947],
        [28, 15, 0.0549],
        [17, 27, 0.4136],
        [27, 17, 0.2531],
        [22, 19, 0.5255],
        [19, 22, 0.5551],
        # [30, 13, 0.24],
        # [13, 30, 0.7303],
        # [20, 4, 0.6488],
        # [4, 20, 0.9461],
        [4, 29, 0.7771],
        [29, 4, 0.2172],
        [4, 2, 0.0175],
        [2, 4, 0.1942],
        [25, 30, 0.4559],
        [30, 25, 0.1931],
        [26, 8, 0.0696],
        [8, 26, 0.3643],
        [27, 11, 0.2093],
        [11, 27, 0.4957],
        # [30, 24, 1.0346],
        # [24, 30, 1.3466],
        [16, 3, 0.0419],
        [3, 16, 0.2836],
        [25, 6, 0.1843],
        [6, 25, 0.5286],
        [24, 16, 0.0232],
        [16, 24, 0.1374],
        [17, 15, 0.5386],
        [15, 17, 0.6217],
        [28, 13, 0.0734],
        [13, 28, 0.4521],
        [7, 5, 0.0223],
        [5, 7, 0.0509],
        [10, 9, 0.0694],
        [23, 2, 0.0512],
        [2, 23, 0.5556],
    ]

    for ind, i in enumerate(bars):
        bars[ind] = [int(bars[ind][0] - 1), int(bars[ind][1] - 1), bars[ind][2]]

    return bars, rel
